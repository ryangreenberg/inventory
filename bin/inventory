#!/usr/bin/env ruby

require 'bundler/setup'
require 'csv'
require 'optparse'
require 'liquid'
require 'byebug'

USAGE = "Usage: inventory [options] <file.csv>"

# Copied from https://github.com/Shopify/liquid/issues/216#issuecomment-54634503
def preprocess_liquid(text)
  text.to_s
    .gsub(/\{#.*?#\}/m, '')          # remove single-line & multiline {# comments #}
    .gsub(/[ \t]*\{\%-/, '{%')       # trim spaces/tabs before {%-
    .gsub(/-\%\}[ \t]*\r?\n?/, '%}') # trim spaces/tabs + newline after -%}
    .gsub(/[ \t]*\{\{-/, '{{')       # trim spaces/tabs before {{-
    .gsub(/-\}\}[ \t]*\r?\n?/, '}}') # trim spaces/tabs + newline after -}}
end

def parse_options(args)
  default_format = "html"

  options = {}
  
  parser = OptionParser.new do |opts|
    opts.banner = USAGE

    options[:format] = default_format
    opts.on("--format", "Output format (html, pdf)") do |format|
      options[:format] = format
    end
  end
  parser.parse(args)

  options
end

def main(args)
  file = ARGV.last
  abort(USAGE) unless file

  data = CSV.read(file, :headers => true)
  columns = data.headers
  items = data.map(&:to_hash)
  title = "Inventory #{Time.now.strftime("%Y-%m-%d")}"

  template_path = File.expand_path('../../template/inventory.liquid.html', __FILE__)
  preprocessed_template = preprocess_liquid(File.read(template_path))
  template = Liquid::Template.parse(preprocessed_template, :error_mode => :strict)
  puts template.render('items' => items, 'columns' => columns, 'title' => title)
end

main(ARGV) if __FILE__ == $PROGRAM_NAME
